{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Generated API documentation"
  },
  "paths": {
    "/testuser": {
      "post": {
        "tags": [
          "Testuser"
        ],
        "summary": "Create a new Testuser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestuserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Testuser created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testuser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Testuser"
        ],
        "summary": "Get all Testusers",
        "responses": {
          "200": {
            "description": "List of Testusers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Testuser"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testuser/{id}": {
      "get": {
        "tags": [
          "Testuser"
        ],
        "summary": "Get Testuser by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testuser ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Testuser retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testuser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testuser not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Testuser"
        ],
        "summary": "Update Testuser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testuser ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestuserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Testuser updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testuser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testuser not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Testuser"
        ],
        "summary": "Delete Testuser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testuser ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Testuser deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testuser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testuser not found"
          }
        }
      }
    },
    "/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create a new Order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all Orders",
        "responses": {
          "200": {
            "description": "List of Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "summary": "Update Order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete Order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/comprehensive": {
      "post": {
        "tags": [
          "Comprehensive"
        ],
        "summary": "Create a new Comprehensive",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComprehensiveCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comprehensive created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Comprehensive"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Comprehensive"
        ],
        "summary": "Get all Comprehensives",
        "responses": {
          "200": {
            "description": "List of Comprehensives retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comprehensive"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comprehensive/{id}": {
      "get": {
        "tags": [
          "Comprehensive"
        ],
        "summary": "Get Comprehensive by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comprehensive ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Comprehensive retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Comprehensive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Comprehensive not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Comprehensive"
        ],
        "summary": "Update Comprehensive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comprehensive ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComprehensiveUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comprehensive updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Comprehensive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Comprehensive not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Comprehensive"
        ],
        "summary": "Delete Comprehensive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comprehensive ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Comprehensive deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Comprehensive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Comprehensive not found"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new Product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all Products",
        "responses": {
          "200": {
            "description": "List of Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Update Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/public": {
      "post": {
        "tags": [
          "Public"
        ],
        "summary": "Create a new Public",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Public created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Public"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "Get all Publics",
        "responses": {
          "200": {
            "description": "List of Publics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Public"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/{id}": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "Get Public by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Public retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Public"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Public not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Public"
        ],
        "summary": "Update Public",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Public updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Public"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Public not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Public"
        ],
        "summary": "Delete Public",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Public deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Public"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Public not found"
          }
        }
      }
    },
    "/testproduct": {
      "post": {
        "tags": [
          "Testproduct"
        ],
        "summary": "Create a new Testproduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestproductCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Testproduct created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testproduct"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Testproduct"
        ],
        "summary": "Get all Testproducts",
        "responses": {
          "200": {
            "description": "List of Testproducts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Testproduct"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testproduct/{id}": {
      "get": {
        "tags": [
          "Testproduct"
        ],
        "summary": "Get Testproduct by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testproduct ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Testproduct retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testproduct"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testproduct not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Testproduct"
        ],
        "summary": "Update Testproduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testproduct ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestproductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Testproduct updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testproduct"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testproduct not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Testproduct"
        ],
        "summary": "Delete Testproduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Testproduct ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Testproduct deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Testproduct"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Testproduct not found"
          }
        }
      }
    },
    "/finaltest": {
      "post": {
        "tags": [
          "Finaltest"
        ],
        "summary": "Create a new Finaltest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaltestCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Finaltest created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Finaltest"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Finaltest"
        ],
        "summary": "Get all Finaltests",
        "responses": {
          "200": {
            "description": "List of Finaltests retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Finaltest"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/finaltest/{id}": {
      "get": {
        "tags": [
          "Finaltest"
        ],
        "summary": "Get Finaltest by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Finaltest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Finaltest retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Finaltest"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Finaltest not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Finaltest"
        ],
        "summary": "Update Finaltest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Finaltest ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaltestUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Finaltest updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Finaltest"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Finaltest not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Finaltest"
        ],
        "summary": "Delete Finaltest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Finaltest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Finaltest deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Finaltest"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Finaltest not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Testuser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "age": {
            "type": "number",
            "description": "age field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id"
        ]
      },
      "TestuserCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "age": {
            "type": "number",
            "description": "age field"
          }
        },
        "required": []
      },
      "TestuserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "age": {
            "type": "number",
            "description": "age field"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "customer": {
            "type": "string",
            "description": "customer reference ID"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsItem"
            },
            "description": "Array of items objects"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "shippingAddress": {
            "type": "string",
            "description": "shippingAddress field"
          },
          "totalAmount": {
            "type": "number",
            "description": "totalAmount field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "customer",
          "items",
          "status",
          "shippingAddress",
          "totalAmount"
        ]
      },
      "OrderCreate": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "string",
            "description": "customer reference ID"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsItem"
            },
            "description": "Array of items objects"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "shippingAddress": {
            "type": "string",
            "description": "shippingAddress field"
          },
          "totalAmount": {
            "type": "number",
            "description": "totalAmount field"
          }
        },
        "required": [
          "customer",
          "items",
          "status",
          "shippingAddress",
          "totalAmount"
        ]
      },
      "OrderUpdate": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "string",
            "description": "customer reference ID"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsItem"
            },
            "description": "Array of items objects"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "shippingAddress": {
            "type": "string",
            "description": "shippingAddress field"
          },
          "totalAmount": {
            "type": "number",
            "description": "totalAmount field"
          }
        }
      },
      "ItemsItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name"
        ]
      },
      "VariantsItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "size": {
            "type": "string",
            "description": "size field"
          },
          "color": {
            "type": "string",
            "description": "color field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "stock": {
            "type": "number",
            "description": "stock field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "size",
          "color",
          "price",
          "stock"
        ]
      },
      "CommentsItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "author": {
            "type": "string",
            "description": "author reference ID"
          },
          "content": {
            "type": "string",
            "description": "content field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "likes": {
            "type": "number",
            "description": "likes field"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "author",
          "content",
          "createdAt"
        ]
      },
      "Comprehensive": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "createdDate field"
          },
          "requiredField": {
            "type": "string",
            "description": "requiredField field"
          },
          "optionalField": {
            "type": "string",
            "description": "optionalField field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending",
              "archived"
            ],
            "description": "status field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books",
              "Home"
            ],
            "description": "category field"
          },
          "author": {
            "type": "string",
            "description": "author reference ID"
          },
          "assignedTo": {
            "type": "string",
            "description": "assignedTo reference ID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of scores items"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of flags items"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of dates items"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of categories references"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of collaborators references"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentsItem"
            },
            "description": "Array of comments objects"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "description": "street field"
              },
              "city": {
                "type": "string",
                "description": "city field"
              },
              "zipCode": {
                "type": "string",
                "description": "zipCode field"
              },
              "country": {
                "type": "string",
                "description": "country field"
              }
            },
            "description": "address object"
          },
          "metadata": {
            "type": "string",
            "description": "metadata field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name",
          "price",
          "isActive",
          "createdDate",
          "requiredField",
          "status",
          "author",
          "tags",
          "scores",
          "flags",
          "dates",
          "categories",
          "variants",
          "address"
        ]
      },
      "ComprehensiveCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "createdDate field"
          },
          "requiredField": {
            "type": "string",
            "description": "requiredField field"
          },
          "optionalField": {
            "type": "string",
            "description": "optionalField field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending",
              "archived"
            ],
            "description": "status field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books",
              "Home"
            ],
            "description": "category field"
          },
          "author": {
            "type": "string",
            "description": "author reference ID"
          },
          "assignedTo": {
            "type": "string",
            "description": "assignedTo reference ID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of scores items"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of flags items"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of dates items"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of categories references"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of collaborators references"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentsItem"
            },
            "description": "Array of comments objects"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "description": "street field"
              },
              "city": {
                "type": "string",
                "description": "city field"
              },
              "zipCode": {
                "type": "string",
                "description": "zipCode field"
              },
              "country": {
                "type": "string",
                "description": "country field"
              }
            },
            "description": "address object"
          },
          "metadata": {
            "type": "string",
            "description": "metadata field"
          }
        },
        "required": [
          "name",
          "price",
          "isActive",
          "createdDate",
          "requiredField",
          "status",
          "author",
          "tags",
          "scores",
          "flags",
          "dates",
          "categories",
          "variants",
          "address"
        ]
      },
      "ComprehensiveUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "createdDate field"
          },
          "requiredField": {
            "type": "string",
            "description": "requiredField field"
          },
          "optionalField": {
            "type": "string",
            "description": "optionalField field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending",
              "archived"
            ],
            "description": "status field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books",
              "Home"
            ],
            "description": "category field"
          },
          "author": {
            "type": "string",
            "description": "author reference ID"
          },
          "assignedTo": {
            "type": "string",
            "description": "assignedTo reference ID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of scores items"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of flags items"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of dates items"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of categories references"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of collaborators references"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentsItem"
            },
            "description": "Array of comments objects"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "description": "street field"
              },
              "city": {
                "type": "string",
                "description": "city field"
              },
              "zipCode": {
                "type": "string",
                "description": "zipCode field"
              },
              "country": {
                "type": "string",
                "description": "country field"
              }
            },
            "description": "address object"
          },
          "metadata": {
            "type": "string",
            "description": "metadata field"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books"
            ],
            "description": "category field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "draft"
            ],
            "description": "status field"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "ratings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of ratings items"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name",
          "price",
          "category",
          "status",
          "tags",
          "ratings",
          "variants",
          "vendor",
          "isActive"
        ]
      },
      "ProductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books"
            ],
            "description": "category field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "draft"
            ],
            "description": "status field"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "ratings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of ratings items"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        },
        "required": [
          "name",
          "price",
          "category",
          "status",
          "tags",
          "ratings",
          "variants",
          "vendor",
          "isActive"
        ]
      },
      "ProductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "enum": [
              "Electronics",
              "Clothing",
              "Books"
            ],
            "description": "category field"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "draft"
            ],
            "description": "status field"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tags items"
          },
          "ratings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of ratings items"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantsItem"
            },
            "description": "Array of variants objects"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        }
      },
      "Public": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "phone": {
            "type": "string",
            "description": "phone field"
          },
          "country": {
            "type": "string",
            "description": "country field"
          },
          "message": {
            "type": "string",
            "description": "message field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name",
          "email",
          "phone",
          "country",
          "message"
        ]
      },
      "PublicCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "phone": {
            "type": "string",
            "description": "phone field"
          },
          "country": {
            "type": "string",
            "description": "country field"
          },
          "message": {
            "type": "string",
            "description": "message field"
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "country",
          "message"
        ]
      },
      "PublicUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "phone": {
            "type": "string",
            "description": "phone field"
          },
          "country": {
            "type": "string",
            "description": "country field"
          },
          "message": {
            "type": "string",
            "description": "message field"
          }
        }
      },
      "Testproduct": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "description": "category field"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images items"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name",
          "price"
        ]
      },
      "TestproductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "description": "category field"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images items"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        },
        "required": [
          "name",
          "price"
        ]
      },
      "TestproductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "price": {
            "type": "number",
            "description": "price field"
          },
          "category": {
            "type": "string",
            "description": "category field"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images items"
          },
          "vendor": {
            "type": "string",
            "description": "vendor reference ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        }
      },
      "Finaltest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "role": {
            "type": "string",
            "description": "role field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "name",
          "email"
        ]
      },
      "FinaltestCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "role": {
            "type": "string",
            "description": "role field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "FinaltestUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name field"
          },
          "email": {
            "type": "string",
            "description": "email field"
          },
          "role": {
            "type": "string",
            "description": "role field"
          },
          "isActive": {
            "type": "boolean",
            "description": "isActive field"
          }
        }
      }
    }
  }
}